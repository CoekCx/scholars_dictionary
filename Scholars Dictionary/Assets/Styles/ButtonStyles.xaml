<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">
    
    
    <!--Classic entry fields-->
    <Style x:Key="classicField" TargetType="TextBox">
        <Setter Property="Padding" Value="5,0,0,0"/>
        <Setter Property="FontFamily" Value="Bahnschrift Light"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Text" Value=""/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Background">
            <Setter.Value>
                <RadialGradientBrush GradientOrigin="0.5, 0.5" Center="0.5, 0.5" RadiusX="0.5" RadiusY="0.5">
                    <GradientStop Color="White" Offset="0"/>
                    <GradientStop Color="WhiteSmoke" Offset="1"/> 
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>

        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>
    
    <!--Classic password entry fields-->
    <Style x:Key="classicPassword" TargetType="PasswordBox">
        <Setter Property="Padding" Value="5,0,0,0"/>
        <Setter Property="FontFamily" Value="Bahnschrift"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    
    
    <!--Main Window Close button-->
    <Style x:Key="mainWindowCloseButton" TargetType="Button">
        <!--Normal button style-->
        <Setter Property="Width" Value="35"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#bfbfbf"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#c1121f"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Main Window Minimize button-->
    <Style x:Key="mainWindowMinimizeButton" TargetType="Button">
        <!--Normal button style-->
        <Setter Property="Width" Value="35"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Gray"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Close button-->
    <Style x:Key="closeButton" TargetType="Button">
        <!--Normal button style-->
        <Setter Property="Width" Value="35"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#000000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#c1121f"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Minimize button-->
    <Style x:Key="minimizeButton" TargetType="Button">
        <!--Normal button style-->
        <Setter Property="Width" Value="35"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#000000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="WhiteSmoke"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
    
    <!--Classic button-->
    <Style x:Key="classicButton" TargetType="Button">
        <!--Normal button style-->
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="7"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="Gray"/>
            </Style>
        </Style.Resources>
        
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="1,1" EndPoint="1,0">
                    <GradientStop Color="LightGray" Offset="0"/>
                    <GradientStop Color="WhiteSmoke" Offset="0.65"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="Bahnschrift"/>
        <Setter Property="FontSize" Value="14"/>

        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="1,1" EndPoint="1,0">
                            <GradientStop Color="LightGray" Offset="0.25"/>
                            <GradientStop Color="WhiteSmoke" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
    <!--Log In button-->
    <Style x:Key="logInButton" TargetType="Button">
        <!--Normal button style-->
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="WhiteSmoke"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"
                        BorderBrush="Transparent" 
                        CornerRadius="3" 
                        Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                    </Border>
                    <!--Button Style on hover-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Menu button text-->
    <Style x:Key="menuButtonTextMainWindow" TargetType="TextBlock">
        <Style.Triggers>
            <Trigger Property="IsMouseDirectlyOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).Color" From="Black" To="#0072B8" Duration="0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).Color" From="#0072B8" To="Black" Duration="0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Classic text box-->
    <Style x:Key="classicTextBox" TargetType="TextBox">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="7"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="Gray"/>
            </Style>
        </Style.Resources>
        <Setter Property="Padding" Value="5,0,0,0"/>
    </Style>

    <!--Log In text block-->
    <Style x:Key="logInTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
    </Style>

    <!--Log In button icon-->
    <Style x:Key="logInButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
    </Style>

    
    <!--Classic button icon-->
    <Style x:Key="classicButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
    </Style>

    
    <!--Colored icon-->
    <Style x:Key="coloredIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="#0072B8" Offset="0.25"/>
                        <GradientStop Color="#203D7C" Offset="1"/>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
    </Style>

    
    <!--Menu button icon-->
    <Style x:Key="controlButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="Height" Value="10"/>
    </Style>

    <!--Border Hover Style - Main Window-->
    <Style x:Key="borderHoverStyle" TargetType="Border">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                            <GradientStop Color="LightBlue" Offset="0"/>
                            <GradientStop Color="Transparent" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>